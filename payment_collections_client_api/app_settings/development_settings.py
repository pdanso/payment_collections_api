"""
Django settings for payment_collections_client_api project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""
import os
from mesika_utils.JsonConfigReader import get_configs
from mesika_utils.LogManagement import Logger

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SETTINGS_FILE = os.path.join(BASE_DIR, 'app_settings/development.json')
ALL_SETTINGS = get_configs(SETTINGS_FILE)

# ============================== SET CONFIGS ===================================
CLIENT = ALL_SETTINGS['client']
APP = ALL_SETTINGS['app_name']
APP_NAME = f"{CLIENT}_{APP}"

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;; EMAIL DELIVERY ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EMAIL_HOST = ALL_SETTINGS['email']['email_host']
EMAIL_PORT = ALL_SETTINGS['email']['email_port']
EMAIL_HOST_USER = ALL_SETTINGS['email']['email_user']
EMAIL_HOST_PASSWORD = ALL_SETTINGS['email']['email_password']
EMAIL_USE_TLS = True

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;; CELERY CONFIGURATIONS ;;;;;;;;;;;;;;;;;;;;;;;;;;;
RABBITMQ_VHOST = ALL_SETTINGS['rabbitmq']['rabbitmq_vhost']
RABBITMQ_HOST = ALL_SETTINGS['rabbitmq']['rabbitmq_host']
RABBITMQ_PORT = ALL_SETTINGS['rabbitmq']['rabbitmq_port']
RABBITMQ_USER = ALL_SETTINGS['rabbitmq']['rabbitmq_user']
RABBITMQ_PASSWORD = ALL_SETTINGS['rabbitmq']['rabbitmq_password']

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; REDIS CONFIGS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
REDIS_HOST = ALL_SETTINGS['redis']['redis_host']
REDIS_PORT = ALL_SETTINGS['redis']['redis_port']

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; AUTH KEYS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SECRET_KEY = ALL_SETTINGS['secret_key']
CLIENT_API_PASSWORD_ENCRYPTION_KEY = ALL_SETTINGS['client_api_password_encryption_key']
SSO_TOKEN_DEFAULT_TIMEOUT = ALL_SETTINGS['sso_token_default_timeout']

# ;;;;;;;;;;;;;;;;;;;;;;;;;;; LOGGING SERVER ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
LOGMASTER_HOST = ALL_SETTINGS['logger']['logger_host']
LOGMASTER_PORT = ALL_SETTINGS['logger']['logger_port']
LOG_HANDLER = Logger(APP_NAME, LOGMASTER_HOST, LOGMASTER_PORT)


KANNEL_HOST = ALL_SETTINGS['kannel']['kannel_host']
KANNEL_PORT = ALL_SETTINGS['kannel']['kannel_port']
KANNEL_DLR_ENDPOINT = ALL_SETTINGS['kannel']['kannel_dlr_endpoint']

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; DATABASE STUFF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DB_NAME = ALL_SETTINGS['db']['db_name']
DB_HOST = ALL_SETTINGS['db']['db_host']
DB_PORT = ALL_SETTINGS['db']['db_port']
DB_USER = ALL_SETTINGS['db']['db_user']
DB_PASSWORD = ALL_SETTINGS['db']['db_password']

AUTH_DB_NAME = ALL_SETTINGS['auth_db']['db_name']
AUTH_DB_HOST = ALL_SETTINGS['auth_db']['db_host']
AUTH_DB_PORT = ALL_SETTINGS['auth_db']['db_port']
AUTH_DB_USER = ALL_SETTINGS['auth_db']['db_user']
AUTH_DB_PASSWORD = ALL_SETTINGS['auth_db']['db_password']

SMS_SOURCE_ADDRESS = ALL_SETTINGS['sms_source_address']
TRANSACTION_CALLBACK = ALL_SETTINGS['transaction_callback']
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'payments',
    'plugins.notifications'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'payment_collections_client_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'payment_collections_client_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    },
    'auth_db': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': AUTH_DB_NAME,
        'USER': AUTH_DB_USER,
        'PASSWORD': AUTH_DB_PASSWORD,
        'HOST': AUTH_DB_HOST,
        'PORT': AUTH_DB_PORT,
    },
    'payment_collections_client': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    },
}

DATABASE_ROUTERS = ['payment_collections_client_api.routers.DatabaseForDevOps']


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static/")

STATICFILES_DIRS = [
    "static/admin",
]


# CELERY_RESULT_BACKEND = 'django-db'
# CELERY_RESULT_BACKEND = f"db+postgresql://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}"
CELERY_BROKER_URL = f"amqp://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@{RABBITMQ_HOST}:{RABBITMQ_PORT}/{RABBITMQ_VHOST}"
CELERY_TASK_ALWAYS_EAGER = False
CELERY_SEND_TASK_ERROR_EMAILS = True
CELERY_TASK_CREATE_MISSING_QUEUE = True
CELERY_TASK_QUEUES = {
    # DEPOSIT
    'pcc': {
        'exchange': 'pcc',
        'routing_key': 'pcc'
    },
}

CELERY_TASK_ROUTES = {
    'pcc': {
        'queue': 'pcc',
        'exchange': 'pcc',
        'routing_key': 'pcc'
    },
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

API_VERSION = 1
